export const questionsData = {
    beginner: [
      { id: 1, question: "What is the output of `print(2 + 2)`?", options: ["22", "4", "Error", "None"], answer: "4" },
      { id: 2, question: "Fill in the blank: `______(\"Hello, World!\")`", options: ["echo", "console.log", "print", "display"], answer: "print" },
      { id: 3, question: "Write a Python program to print your name.", answer: "print(\"Your Name\")", type: "coding" },
      { id: 4, question: "What will be the output of this code?\n`x = 5\nif x > 2:\n  print(\"Greater than 2\")`", options: ["Greater than 2", "Error", "Nothing", "None of the above"], answer: "Greater than 2" },
      { id: 5, question: "Write a Python program to calculate the square of a number.", answer: "print(x ** 2)  # where x is the number", type: "coding" },
      { id: 6, question: "What is the correct syntax to create a list in Python?", options: ["[]", "()", "{}", "<>"], answer: "[]" },
      { id: 7, question: "Which function is used to take input from a user in Python?", options: ["scan()", "input()", "read()", "ask()"], answer: "input()" },
      { id: 8, question: "Which keyword is used to define a function in Python?", options: ["def", "func", "function", "define"], answer: "def" },
      { id: 9, question: "Which operator is used for exponentiation in Python?", options: ["^", "**", "%%", "exp"], answer: "**" },
      { id: 10, question: "What will be the output of `print(type(4))`?", options: ["<class 'int'>", "<type 'int'>", "int", "Error"], answer: "<class 'int'>" },
    ],
    medium: [
      { id: 11, question: "Write a Python program to reverse a string.", answer: "print(input()[::-1])", type: "coding" },
      { id: 12, question: "What will be the output of this code?\n`x = [1, 2, 3]\nx.append(4)\nprint(x)`", options: ["[1, 2, 3, 4]", "[1, 2, 3]", "Error", "None"], answer: "[1, 2, 3, 4]" },
      { id: 13, question: "Write a Python function that takes a list and returns the sum of its elements.", answer: "def sum_list(lst):\n  return sum(lst)", type: "coding" },
      { id: 14, question: "Write a Python program to find the factorial of a number using recursion.", answer: "def factorial(n):\n  if n == 0:\n    return 1\n  return n * factorial(n - 1)", type: "coding" },
      { id: 15, question: "What is the purpose of `try` and `except` in Python?", options: ["Error handling", "Data manipulation", "File reading", "Looping"], answer: "Error handling" },
      { id: 16, question: "What will be the output of this code?\n`x = [1, 2, 3]\nprint(x[1:3])`", options: ["[2, 3]", "[1, 2]", "[1, 2, 3]", "Error"], answer: "[2, 3]" },
      { id: 17, question: "Write a Python program that reads a number and prints whether it is positive or negative.", answer: "x = int(input())\nif x > 0:\n  print('Positive')\nelse:\n  print('Negative')", type: "coding" },
      { id: 18, question: "Write a Python program to check if a string is a palindrome.", answer: "def is_palindrome(s):\n  return s == s[::-1]", type: "coding" },
      { id: 19, question: "What does the `continue` statement do in Python?", options: ["Exits the loop", "Skips the current iteration", "Waits for input", "None"], answer: "Skips the current iteration" },
      { id: 20, question: "Write a Python program to count the occurrences of a specific character in a string.", answer: "s.count('a')  # Count occurrences of 'a'", type: "coding" },
    ],
    advanced: [
      { id: 21, question: "Write a Python program to merge two sorted lists into a new sorted list.", answer: "def merge_lists(lst1, lst2):\n  return sorted(lst1 + lst2)", type: "coding" },
      { id: 22, question: "Explain the difference between deep copy and shallow copy in Python.", options: ["Shallow copy copies references, deep copy copies objects", "Deep copy copies references, shallow copy copies objects", "No difference", "None"], answer: "Shallow copy copies references, deep copy copies objects" },
      { id: 23, question: "Write a Python program to implement a binary search algorithm.", answer: "def binary_search(arr, target):\n  low, high = 0, len(arr) - 1\n  while low <= high:\n    mid = (low + high) // 2\n    if arr[mid] == target:\n      return mid\n    elif arr[mid] < target:\n      low = mid + 1\n    else:\n      high = mid - 1\n  return -1", type: "coding" },
      { id: 24, question: "Explain what a generator is in Python and provide an example.", answer: "def generator_example():\n  for i in range(5):\n    yield i", type: "coding" },
      { id: 25, question: "Write a Python program that reads a CSV file and prints its contents.", answer: "import csv\nwith open('file.csv') as file:\n  reader = csv.reader(file)\n  for row in reader:\n    print(row)", type: "coding" },
      { id: 26, question: "What are decorators in Python?", options: ["Functions that modify other functions", "Functions that return another function", "Loops in Python", "None"], answer: "Functions that modify other functions" },
      { id: 27, question: "Write a Python program that implements an LRU Cache.", answer: "from collections import OrderedDict\nclass LRUCache:\n  def __init__(self, capacity):\n    self.cache = OrderedDict()\n    self.capacity = capacity\n  def get(self, key):\n    if key in self.cache:\n      self.cache.move_to_end(key)\n      return self.cache[key]\n    return -1", type: "coding" },
      { id: 28, question: "Explain the concept of list comprehension in Python with an example.", answer: "[x for x in range(10) if x % 2 == 0]", type: "coding" },
      { id: 29, question: "Write a Python program that implements a simple command line interface (CLI).", answer: "import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('--name')\nargs = parser.parse_args()\nprint('Hello', args.name)", type: "coding" },
      { id: 30, question: "Write a Python program to implement a simple multi-threaded application.", answer: "import threading\n\ndef print_numbers():\n  for i in range(5):\n    print(i)\n\nthread = threading.Thread(target=print_numbers)\nthread.start()", type: "coding" },
    ],
  };